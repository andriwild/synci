spring:
  application:
    name: backend
  security:
    oauth2:
      client:
        provider:
          synci-keycloak:
            issuer-uri: http://localhost:8090/realms/synci
        registration:
          keycloak:
            provider: synci-keycloak
            client-id: synci-backend
            client-secret: qsRBHYpRSoqE5XrCCQE1iM6BqdK66tDK
            authorization-grant-type: authorization_code
            scope:
              - openid

  flyway:
    locations: db/migration/
    url: ${ch.boosters.db.jdbcUrl}
    password: ${ch.boosters.db.password}
    user: ${ch.boosters.db.username}
  config:
    import:
    - "classpath:sources/swissski.yml"
    #- "classpath:sources/fotmob.yml"

ch:
  boosters:
    db:
      jdbcUrl: jdbc:postgresql://localhost:5432/${POSTGRES_DB_NAME:synci-db}
      username: ${POSTGRES_USER:postgres}
      password: ${POSTGRES_PASSWORD:postgres}
      driverClassName: org.postgresql.Driver
      maximumPoolSize: 3
      connectionTimeout: 2000
      validationTimeout: 2000
      connectionTestQuery: "SELECT 1"
      initializationFailTimeout: -1

server:
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: prometheus
  endpoint:
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

#logging:
#  level:
#    root: DEBUG