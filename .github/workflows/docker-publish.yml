name: Docker build and push

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Start PostgreSQL service
        run: |
          sudo systemctl start postgresql.service
          pg_isready

      - name: Update db user
        run: |
          sudo -u postgres psql --command="ALTER USER postgres WITH PASSWORD 'postgres'"

      - name: Create synci database
        run: |
          sudo -u postgres psql --command='CREATE DATABASE "synci-db" OWNER postgres;'

      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Create db tables
      #   run: |
      #     PGPASSWORD=postgres psql -U postgres -d synci-db -h localhost -p 5432 -a -f ./database/synci-schema.sql

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
     
      - name: Build frontend image
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/synci-frontend:${{ github.ref_name }} ./frontend

      - name: Push frontend image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/synci-frontend:${{ github.ref_name }}
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/synci-frontend:${{ github.ref_name }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/synci-frontend:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/synci-frontend:latest
          
      - name: Build backend image 
        run: |
          docker build --network="host" -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/synci-backend:${{ github.ref_name }} ./backend

      - name: Push backend image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/synci-backend:${{ github.ref_name }}
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/synci-backend:${{ github.ref_name }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/synci-backend:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}/synci-backend:latest


